##### lighttpd configuration file
##### It is for Router

var.www_dir = "/www"
var.log_dir = "/var/log/lighttpd"
var.run_dir = "/var/run"
var.cache_dir = "/var/cache/lighttpd"

server.tag = "httpd"
server.use-ipv6 = "enable"
server.document-root = www_dir
server.port=80
server.errorlog = log_dir + "/lighttpd.error.log"
accesslog.filename = log_dir + "/lighttpd.access.log"
url.access-deny = ( "~", ".inc")

server.pid-file = run_dir + "/lighttpd.pid"

server.event-handler = "poll"

mimetype.assign = (
	".htm"=>"text/html",
	".html"=>"text/html",
	".txt"=>"text/plain",
	".jpg"=>"image/jpeg",
	".png"=>"image/png",
	".css"=>"text/css",
	".js"=>"text/javascript",
	".json"=>"application/json",
	".gif"=>"image/gif",
	".appcache"=>"text/cache-manifest",
	""=>"application/octet-stream",
)

server.modules = (
	"mod_expire",
	"mod_alias",
	"mod_setenv",
	"mod_cgi",
	"mod_accesslog",
	"mod_fastcgi",
	"mod_compress",
	"mod_redirect",
	"mod_rewrite"
)

server.modules += ( "mod_session" )

session.exception-uri = ( "login.html", "login.cgi", "login_s.cgi", "crossecho.html", "fqc.cgi" )
session.uri-to-check = ( ".html", ".cgi", "/API" )
session.session-timeout = 600

server.indexfiles = ("system-status.html")

#fastcgi.debug = 1

fastcgi.server = (
  "/API" =>
  (( "host" => "127.0.0.1",
     "port" => 9999,
     "check-local" => "disable",
     "docroot" => "/" # remote server may use 
                      # its own docroot
  ))
)

cgi.assign = ( 
	".shtml" => "",
	".cgi" => ""
)

alias.url = (
	"/cgi-bin" => www_dir + "/cgi-bin",
	"*.cgi" => www_dir + "/cgi-bin"
)

$HTTP["url"] !~  "\.(jpg|gif|png|css|js|txt|ico|json)$" {
	setenv.add-response-header = ( "Cache-Control" => "no-store, no-cache, must-revalidate, post-check=0, pre-check=0, max-age=-1" )
}

server.max-request-size= 900000000
server.network-backend="write"
server.upload-dirs=( "/tmp" )
server.max-keep-alive-requests = 4
server.max-keep-alive-idle = 4

$HTTP["url"] =~ "\.(jpg|gif|png|css|js|txt|ico|json)$" {
	setenv.add-response-header = ( "Cache-Control" => "public" )                                                                                                                                                                   
	expire.url = ( "" => "access plus 1 days" )                                                                                                                                                                                    
}

compress.filetype = ("text/plain", "text/html", "image/jpeg", "image/png", "text/css", "text/javascript", "image/gif")
compress.allowed-encodings = ("bzip2", "gzip", "deflate")
compress.cache-dir = cache_dir

etag.use-inode = "enable"
etag.use-mtime = "enable"
etag.use-size = "enable"
static-file.etags = "enable"

$SERVER["socket"] == ":443" {
	server.use-ipv6 = "enable"
	ssl.engine = "enable"
	ssl.pemfile = "/etc/lighttpd/gcpe.pem"
}

$SERVER["socket"] == ":55688" {
	alias.url = (
		"/pc/blocked" => "/www/pc-blocked.html",
		"/pc/unlock" => "/www/cgi-bin/pc_unblock.cgi"
	)
}

#include "conf.d/meshnode.conf"
